// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RehkitzWebApp.Model;

#nullable disable

namespace RehkitzWebApp.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230517205033_RehkitzDB")]
    partial class RehkitzDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RehkitzWebApp.Model.Protocol", b =>
                {
                    b.Property<int>("protocolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("protocolId"));

                    b.Property<string>("areaSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("clientFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("foundFawns")
                        .HasColumnType("int");

                    b.Property<int>("injuredFawns")
                        .HasColumnType("int");

                    b.Property<string>("localName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("markedFawns")
                        .HasColumnType("int");

                    b.Property<string>("pilotFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("protocolCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("regionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("protocolId");

                    b.ToTable("Protocol");
                });

            modelBuilder.Entity("RehkitzWebApp.Model.Region", b =>
                {
                    b.Property<int>("regionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("regionId"));

                    b.Property<string>("contactPersonFirstName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("contactPersonLastName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("contactPersonMail")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("regionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("regionState")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("regionId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("RehkitzWebApp.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("userFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("userId");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
